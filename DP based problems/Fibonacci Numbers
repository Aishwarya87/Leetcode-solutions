using Recursion- a self- referrential function.
But unfortunately, this might result in exponential number of sub-problems in the size of n.

So we use dictionaries(which provide constant time for running).=====> quick to lookup what the values are.
Have to iterate upto the number n.

class Solution:
    def fib(self, n: int) -> int:
        seen={0:0,1:1}
        for i in range(2,n+1):
            seen[i]=seen[i-1]+seen[i-2]
        return seen[n]
